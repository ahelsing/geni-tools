# This file contains only old releases. Changes in new releases are in CHANGES.md
# Note: keep this file in wiki format for easy pasting to the gcf wiki

gcf 2.6:
Released June 10, 2014
 * Omni
  * New function `removeslicemember <slice> <username>`: 
    Remove the user with the given username from the named slice. (#515)
  * Add functions `listprojects` to list your projects, and `listprojectmembers`
    to list the members of a project and their role in the project and
    email address. (#495)
  * Include `addMemberToSliceAndSlivers` in Windows and Mac binaries (#585)
  * Include `remote-execute` in Mac binaries (#601)
  * Record FOAM reservations at the clearinghouse when using the
    `chapi` framework, by using fake sliver URNs. (#574)
  * `listslicemembers` honors the `-o` option to save results to a
    file, and `--tostdout` to instead go to STDOUT. (#489)
  * `listslivers` honors the `-o` option to save results to a file,
    and `--tostdout` to instead go to STDOUT. (#488)
  * `get_ch_version`, `listaggregates`, `listslices`, `listmyslices`,
    `listkeys`, `listmykeys`, `listimages`, and `nicknames`
    honor the `-o` option to save results to a file,
    and `--tostdout` to instead go to STDOUT. (#371)
  * `listkeys` return is a list of structs of ('`public_key`',
    '`private_key`'), where `private_key` is omitted for most
    frameworks and most cases where not available. (#600)
  * Added `print_sliver_expirations` to print the expirations of your
    slivers at requested aggregates. Also print sliver expirations from
    `sliverstatus`, `listresources` and `createsliver` calls. (#465, #564, #571)
   * Added new utilities in `handler_utils` to extract sliver
     expiration from the manifest and sliverstatus.
  * Clean up console log messages. (#623)
  * Retry on AM busy message two more times, sleeping 15 seconds instead 
    of 10. (#624,#635)
  * Restore printing of non-standard options used in command summary. (#625)
  * Help specifies defaults for more options. (#626)
  * Mac install clears old `omni.py` and similar aliases (#556)
  * Fix `get_cert_keyid` to get the key id from the certificate (#573)
  * `renewslice` properly warns if your new expiration is not what you
    requested (#575)
  * rspec_util utility takes optional logger (#612)
  * Add support for talking to SA/MA that speak Federation API v2.
    To use the v2 APIs, add to your `omni_config`: `speakv2=true`. (#613)
  * Ensure manifest from `createsliver` is printed prettily.
    `getPrettyRSpec` takes a flag on whether it does pretty
    printing, default True. Do not do pretty printing on most
    Ads, and some manifests. Uses less memory. (#610)
  * Clean up error getting slice credential for unknown slice from
   `chapi` clearinghouses. (#538)
  * Clarify error messages in `delegateSliceCred`. (#619)
  * Harden update of `agg_nick_cache` to avoid replacing a good cache
    with one that was empty or incomplete on download. (#631)
  * Document creating an alias for `addMemberToSliceAndSlivers`
    in `INSTALL.txt`. (#632)
  * Avoid error doing `listprojects` when user has none. (#637)
  * More use of `os.path.join`, `os.sep`, `os.normpath` for Windows support (#639)
  * Ensure SFA libraries look for the temp dir in `TMP` as well as `TEMPDIR`, and try to create
    the directory if it doesn't exist. (#560)

 * stitcher
  * Where possible, request that the AM pick the VLAN tag,
    by requesting 'any'. Therefore, many fewer VLAN unavailable
    errors. This only works at AMs that are VLAN producers or
    per the SCS do not depend on other AMs. This does not currently work at
    ExoGENI or GRAM-based AMs. (#576,#604)
  * Put the list of AMs used by the stitched slice in `~/.gcf`, not
    the current directory. So you can be in a different directory later 
    to find it. (#462)
  * Added new option `--fileDir`. If provided, all stitcher files go in this directory,
    and not the `/tmp` and `~/.gcf` 
    and current working directory otherwise used. This prefix also modifies 
    the value from `--prefix`, so other output files are written to this directory. 
    Therefore 2 stitcher instances can run in parallel. (#588)
   * Be sure to manipulate directories as absolute paths, so '.' works. (#629)
   * Test to ensure fileDir is a writable directory. (#633)
  * Support GRE links (instead of or in addition to stitched links). (#562)
  * Clean up logging: console log messages are cleaner and fewer. 
    Stitcher produces a debug-level log file named `stitcher.log`
    suitable for use in reporting problems. (#450)
   * Ensure log config file is found when running from other directories. (#628)
   * When the logging.conf file cannot be read (e.g. in Windows and Mac
     binary archives), try `pkg_utils`. Else, read a default configuration
     from a python constant. (#641)
  * Remove the MTU bug as a known issue, since it is fixed. (#555)
  * On an `INSUFFICIENT_BANDWIDTH` error, try excluding this AM, and
    advise the user to try less bandwidth. (#579)
  * Fix handling of ProtoGENI error messages and codes to reflect new
    use of VLAN_UNAVAILABLE and other error codes. (#602)
  * Add support for stitching schema v2: change schema versions to
    make AM happy as needed, find VLAN tags in the openflowl2sc
    capabilityDescriptor OR the l2sc descriptor (not both). Also added
    new option `--savedSCSResults` for running from saved SCS
    results. (#578)
  * At run end, print sliver expiration times for each AM, and warn if there are
    differences across AMs. (#572)
  * Exit if any nodes are unbound in the request. (#614)
  * Pass the usual `verbosessl` option to create the SCS client,
    allowing verbose logging of SSL connections to the SCS. (#557)
  * New range to pick a tag from must be limited by the available
    tags on other hops on the same path if they don't translate.
    Avoid picking a tag on one hop and copying it to another
    where it is illegal. (#558)
  * Make "Adding aggregate option" messages debug level (#584)
  * At PG/IG, `Need node id for links` is fatal (#583)
  * Request from the SCS the merged paths workflow, although we
    do not use it, as this forces SCS to detect workflow loops. (#580)
  * Clearer error messages when there are no more VLANs for stitcher
    to try. (#561)
  * Global IDs are per DCN AM, so record them on the hop not the path,
    to avoid misleading warnings on paths that cross 2 DCN AMs (like
    MAX and ION). (#582)
  * Support producing integrated manifest RSpec when using a GRAM-based AM. (#605)
  * `no edge hop` message at ProtoGENI AMs is fatal. (#611)
  * `--noReservation` exits with code `0`. (#609)
  * `Error in building the dependency tree, probably not available
    vlan path` at EG means the VLAN is unavailable. (#606)
  * `Edge iface mismatch when stitching` is fatal at PG AMs. (#615)
  * Turn down some ExoGENI only harmless messages. (#321)
  * Honor `--tostdout`, `--prefix`, and `--outputfile` in
    controlling where expanded request RSpecs are written
    when using `--noReservation`. (#608)
  * Pause between calls to the SCS the full 600 seconds only if we tried
    a reservation at a DCN AM - not just if any AM in the topology is a DCN AM. (#351)
  * On `VLAN PCE` error from a DCN AM, if we had asked for 'any' from the endpoints,
    then re-request asking for a different tag. Note that this still fails
    due to an IG bug. (#622)
  * Exit if the request RSpec requires an aggregate for which the URL
    is unknown. (#630)
  * When reserving at a DCN AM, if the expiration is after the slice expiration
    (a bug - ggw#1258), renew at the AM back to the slice expiration. (#638)
  * More use of `os.path.join`, `os.sep`, `os.normpath` for Windows support (#639)
  * If CWD is not writable and `fileDir` isn't already set, set `fileDir` to
    a writable temporary directory to hold stitcher output. (#642)

 * omni-configure
  * Support iMinds PG instance, and fix error message on unsupported
    PG SA (#597)

 * readyToLogin
  * Handle malformed sliver status (#599) 
  * Be robust to malformed EG manifest missing 'state' attribute. (#636)

 * gcf
  * Support for `geni_extend_alap` option in renew on GCF AMv2 and AMv3 (#414)
  * Support for `geni_am_type` and `geni_am_code` in GCF AMv3 (#568)
  * Fix gcf-test to work with AM API v3 again. (#616)

 * acceptance
  * Use your GENI Clearinghouse and Portal account for acceptance testing, not pgeni.
    And use resources from utahddc, not the GPO PL nodes. (#617)
  * Document scripts `am_api_accept_scaling.py` and `am_api_accept_nagios.py`. (#618)

gcf 2.5.3:
 * omni-configure:
  * Clean up output and function of `omni-configure` (#436)
    * Made `omni-configure` easier to use in cases where you are
    recreating an omni_config.
      To reconfigure an existing config and overwrite any relevant
      files try:
        `omni-configure --replace-all`
    * Refactored code for easier maintenance
    * `omni-configure` now records files that it writes in a new
    section of the omni_config
    * New option `--clean` will delete many files generated by
    `omni-configure`
    * New option `--replace-all` will act as if the user answered
    "yes" when asked whether to replace an existing file with a
    new one
    * Look for a portal omni bundle file named `omni.bundle` first
    before looking for `omni-bundle.zip`

 * omni
  * Can now parse omni-configure sections of omni_config. (#436)

gcf 2.5.2:
 * Update the OpenSSL version used in the Windows package to 1.0.1g,
   avoiding the heartbleed vulnerability. (#594)
 * Update various packages in Windows and Mac binaries to be
   consistent versions. (#595)

gcf 2.5.1:
 * Update licenses file for Windows and Mac Omni packages (#552)

gcf 2.5:
 * Released Windows and Mac OS X packages of the Omni experimenter
   utilities. (Developer gcf components are not included.)
 * Omni adds the ability to contact clearinghouses that speak the
   Uniform Federation API using framework type `chapi`
 * When using the new `chapi` framework allow a `--useSliceAggregates`
   option to specify that the aggregate action should be taken at all
   aggregates at which you have resources in this slice. (#507)
 * Added new options to allow installing SSH keys of all slice members
   when using the new `chapi` framework. (#491, #278)
 * Refactored the source code to make it easier to import Omni in
   other tools. Look in `src/gcf` for directories that were
   previously directly under `src`. (#388) Thanks to Nick Bastin.
 * Added utilities for creating and processing 'Speaks For'
   credentials (which Omni can pass along to aggregates and to Uniform
   Federation API clearinghouses).
 * Timeout Omni calls to servers after 6 minutes (controlled by `--ssltimeout`)
 * Stitcher adds an option to force use of the ExoSM for EG resources.
 * Stitcher saves the manifest RSpec to a file by default.
 * Stitcher fills in capacity on your links where it is missing
   (amount is configurable)
 * Stitcher adds the ability to query the Stitching Service for a list of
   stitchable aggregates.

 * omni
  - Add a new framework type `chapi` for talking the Uniform Federation API 
    (http://groups.geni.net/geni/wiki/UniformClearinghouseAPI)
    to compliant clearinghouses (e.g. GENI Clearinghouse). (#345, #440)
   - See `omni_config.sample` for config options required
   - To upgrade a `pgch` config for `ch.geni.net` to a `chapi` config:
    - Change `type = pgch` to `type = chapi`
    - Change `ch = https://ch.geni.net...` to:
{{{
ch=https://ch.geni.net:8444/CH
ma=https://ch.geni.net/MA
sa=https://ch.geni.net/SA
}}}
   Included in this change:
   - When creating or renewing or deleting slivers, tell the Slice Authority.
     This allows the SA to know (non-authoritatively) where your slice
     has resources. (#439)
   - New function `listslivers <slice>`: lists the slivers reported to 
     the slice authority in the given slice, by aggregate (with
     the sliver expirations). Note that this information is not
     authoritative - contact the aggregates if you want to be sure
     not to miss any reservations.
   - New function `listslicemembers <slice>`: lists the members of
     the given slice, with their email and registered SSH public
     keys (if any) and role in the slice. (#421, #431, #278)
   - New function `addslicemember <slice> <username> [optional: role]`:
     Adds the user with the given username to the named slice,
     with the given role (or `MEMBER` by default). Note this
     does not change what SSH keys are installed on any existing
     slivers. (#422, #513)
  - Support `geni_extend_alap` with new `--alap` option, allowing you to
    request that slivers be renewed as long as possible, if your
    requested time is not permitted by local AM policy. (#415)
  - When using the new `chapi` framework allow a `--useSliceAggregates`
    option to specify that the aggregate action should be taken at all
    aggregates at which you have resources in this slice. (#507)
   - Any `-a` aggregates are extra. 
   - At other frameworks, this is ignored.
   - This option is ignored for commands like `createsliver`,
   `allocate`, `provision`, and `getversion`.
  - Added new option `--noExtraCHCalls` to disable calls to the
    clearinghouse to report slivers, query for slivers, or query
    a list of aggregates; explicit CH calls and retrieving credentials
    is not effected. (#514)
  - Added new options controlling what SSH keys are installed on
    compute resources. Default behavior is unchanged. These options
    control what users are created and SSH keys installed in new
    slivers from `createsliver` or `provision`, or when you update
    the installed users and keys using 
    `performoperationalaction <slice> geni_update_users`.
    If you supply the new option `--useSliceMembers` and your
    clearinghouse supports listing slice members (i.e. the new `chapi`
    type), then Omni will fetch the members of your slice from the
    clearinghouse and their public SSH keys, and send those to the
    aggregate to install on new compute resources. (#278, #441)
    By default, Omni will ''also'' read the users and SSH keys
    configured in your `omni_config` as usual, ''adding'' those users
    and keys to the set downloaded from the clearinghouse, if any.
    You can skip reading the `omni_config` keys by supplying the new option
    `--ignoreConfigUsers`.
    As before, `performoperationalaction` allows you to specify a file
    containing options with the `--optionsfile` option. If that file
    specifies the `geni_users` option, then that is the only set of
    users and keys that is supplied with `performoperationalaction`.
    However, if you do not supply the `geni_users` option from a file,
    Omni uses the same logic as for `createsliver`, optionally
    querying your clearinghouse for slice members, and by default 
    reading users and keys configured in your `omni_config`. (#491)
  - If set, `GENI_FRAMEWORK` environment variable is the default for
    the `--framework` option (#315). Thanks to Nick Bastin.
  - If set, `GENI_USERCRED` and `GENI_SLICECRED` environment variables
    set the default path to your saved user and slice credentials
    (#434) Thanks to Nick Bastin.
  - Handle `~` in `usercredfile` and `slicecredfile` (#455) Thanks to
    Nick Bastin.
  - Support querying for other users' SSH keys where the CH supports it (#472)
  - Allow nicknames or URLs in the aggregates list in `omni_config` (#476)
  - Allow `PerformOperationalAction` on v2 AMs (#412)
  - Renew Slice returns actual new expiration (checks the SA, not just
    assuming success means you got what you asked for) (#428, #447)
  - Add a 360 second timeout on AM and CH calls. Option `--ssltimeout`
    allows changing this. (#407)
   - If Omni hangs talking to a server you believe is up, try
     specifying `--ssltimeout 0` to disable the timeout. Some servers
     cannot handle the timeout request. (See ticket #506)
   - Note this timeout does not work on old versions of python2.6 due
     to a known python bug: http://bugs.python.org/issue5103
  - Speed up `listaggregates` in `pgch` framework (don't test AM API
    compliance) (#482)
  - Refactored the source code to make it easier to import Omni in
    other tools. Look in `src/gcf` for directories that were
    previously directly under `src`. (#388) Thanks to Nick Bastin.
   - Your Omni based tool no longer needs to include any of the top
     level scripts that Omni/GCF includes, nor to provide the existing
     Omni `main`.
   - Most of the code in `omni.py` has now been moved to
     `gcf/oscript.py`
   - To update your script that uses omni as a library:
    - Change `import omni` to `import gcf.oscript as omni`
  - Avoid sending options to `getversion` if there are none, to support querying v1 AMs (#375)
  - Fix passing speaksfor and other options to `createsliver`, `renewsliver` (#377)
  - `renewslice` when given a slice credential replaces the saved 
    slice credential in place, rather than in a new filename. (#386)
  - Create any directories needed in the path to the `agg_nick_cache` (#383)
  - If using `--AggNickCacheName` and can't read/write to the specified
    file, omni should fall back to reading `agg_nick_cache.base` (#384)
  - Look up AM URN by URL in the defined aggregate nicknames (#404)
  - Support named timezones when renewing, etc (#503)
  - Eliminated a repetitive log message (#384, #385)
  - Fix bug in APIv3 calling status with slivers with different
    expiration times (#408)
  - Fit Omni result summaries in 80 character wide terminals (#409)
  - `ForceUseAggNickCache` avoids fetching new cache even if the agg
    nick cache is old (#391)
  - SFA slice and user records changed: keys and slices moved (#429)
  - Fix bug in handling errors in `listimages` and `deleteimage` (#437)
  - Support unicode urns (#448)
  - Return any error message from a CH on `getusercred` (#452)
  - Return error on SA error in `listslices` (#456)
  - Omni `cred_util.py` uses an omni logger (#460)
  - URN testing requires 4 `+` separated pieces (#483)
  - Log at debug when downloading the aggregate nickname cache fails (#485)
  - `chapi` framework looks up the MA and SA at the clearinghouse,
    though you can configure where they run. (#490)
  - Warn when acting at all AMs in the clearinghouse - slow (#461)
  - Speaks for option that Omni passes to aggregates has been renamed
    `geni_speaking_for` (#466)
  - Show the AM nickname instead of URL in output (#424, #504)
  - Properly parse the verbose config option and let the commandline
    `--verbosessl` over-ride it talking to clearinghouses. (#509)
  - Ensure `geni_version` on credential structs is a string.
    Fix bug in `get_cred_type` and correct for a chapi bug. (#516)
  - Notice invalid slice and member names earlier and suppress ugly
    tracebacks on most `chapi` framework errors. (#517)
  - Support AM API draft proposal O1 and allow '.' and '_' in sliver
    names, and do not complain or stop needlessly on illegal sliver
    names. (#518)
  - Catch parse errors when determining credential type (#521)
  - Using `chapi` framework, expired slice expirations are printed (#523)
  - When doing `renewsliver --alap`, if the real expiration is not in
    the `output` slot, call `sliverstatus` to get it. (#527)
  - Bail early from `createsliver` or `createimage` if the user
    didn't specify exactly one aggregate. (#395)
  - Update copyrights to 2014 (#463, #426)
  - Handle non string rspec when printing RSpec (#445)
  - Allow `--optionsfile` with `createimage`, `deleteimage`, and
    `listimages`. (#532)
  - Allow underscore in generated clean filenames (#533)
  - Handle `createslice` errors at the GENI Clearinghouse that might
    be due to having the wrong case, now the project and slice names 
    are case sensitive. (#535)
  - Trim trailing newlines before installing SSH keys (#537)
  - Explicitly import framework files in `oscript.py` to support
    Windows and Mac binaries. (#542)
  - Fix wording and licenses for Windows and Mac binaries (#541)
 
 * stitcher
  - Completely parse workflows 3+ hops deep (#432)
  - Retry if SFA AM gives error indicating a new project (#433)
  - scs.py supports monitoring style invocation. Invoke scs.py directly. 
    `--monitoring` suppresses some output, and `--scs_url` changes the SCS URL.
    Return 0 if SCS is up, 1 on error. (#394)
  - Fix call to delete reservation at an EG AM on allocate error (#406)
  - Handle empty range of VLANs in VLANRange (#471)
  - Report per sliver errors at DCN AMs (#481)
  - Fix circular imports in `RSpecParser` and `objects` (#459)
  - Add option `--useExoSM` to force use of the ExoSM for EG racks,
    where possible. Use this if you are reserving bare metal nodes. (#496)
  - Change filenames to not use bad characters to support Windows (#497)
  - `Could not verify topo` is fatal at PG AMs (#470)
  - `Hostname > 63 characters` is fatal at PG AMs (#475)
  - `Inconsistent ifacemap` is fatal at PG AMs (#477)
  - `Duplicate link` is fatal at PG AMs (#479)
  - `Must delete existing` is fatal at PG AMs (#438)
  - Ensure we have an error message when a DCN reservation failed to
    become ready and we have no circuitIDs. (#480)
  - Save the result manifest RSpec to a file always (not to log)
    unless the user specified `--tostdout` explicitly (#498)
  - Show the AM nickname in addition to URL in output (#424)
  - Suppress some useless log messages (#499)
  - New option to the SCS main `--listaggregates` to list the
    aggregates known to the SCS. (#501)
  - Treat another PG error message as meaning the VLAN is
    unavailable. (#285)
  - `CreateSliver: Existing record` is fatal at DCN aggregates (#438)
  - Note known issues in README-stitching (#469)
  - Added option `--defaultCapacity` to specify the default capacity
    to fill in on stitchable links that do not specify a capacity.
    At some aggregates, you must explicitly specify a capacity for
    stitching to work. Stitcher now ensures that all your stitchable
    links have an explicit capacity. (#464)
   - Works around issues http://groups.geni.net/geni/ticket/1039 and 
     http://groups.geni.net/geni/ticket/1101
  - Only add fake interface to a link for `--fixedEndpoint` option if
    there is only 1 interface on the link. (#392)
  - New option `--noReservation` to just get the expanded request
    RSpec, and not actually talk to the aggregates. (#505)
  - Be robust to SCS workflow having a fake all_paths path (#511)
  - When adding a fake node, only do so if there are only interfaces
    from a single AM - multiple interfaces at one AM counts as needing
    the fake one. Similarly, when adding capacity on property elements,
    set the destination based on an interface at a different aggregate. (#512)
  - Stop changing AM URL based on getversion Ad (breaks if AM lists wrong
    URL, as was happening). (#528)
  - Error from DCN AM is fatal: 'Login base must be specified'. (#529)
  - Avoid duplicating ExoSM in list of AMs when using `--useExoSM` (#530)
  - Major rewrite of code to handle an unavailable VLAN tag (#486)
   - Do not allow picking a tag already picked by same interface
     on a different path
   - Complain and bail if we run out of tags to pick from
   - Distinguish between tags that are available and tags to pick from
   - Cleaner error messages
   - For PG AMs (if we can tell), avoid using the same tag anywhere at
     the AM (except on the same path). (#355)
  - Allow underscore in project names to generate different saved slice
    credential files, so 2 slices aren't confused. (#533)
  - A `Malformed keys` error is fatal, so stop. (#537)
  - "Signer certificate does not have a URL" is a fatal error. (#539)
  - Clarify error logs to be clear if it was a VLAN unavailable error,
    aggregate error, or stitcher error, and if there is something
    specific the experimenter should do to fix it. (#540)
  - Internal API errors at DCN AMs are fatal (#546)
  - Avoid DCN AMs as the basis for the combined manifest,
    to avoid namespace problems in DCN manifests. (#549)
  - Try to handle a failed status that means vlan unavail in OSCARS (#547)

 * gcf
  - AM API v2 GCF AM now has a local policy limiting renewals to
    MAXLEASE days, set to 365. If `geni_extend_alap` is supplied, then
    renew any slivers as long as possible, reporting the new expiration. (#414)
  - Ensure that manifests include `client_id`, `component_id`,
    `component_manager_id`, and `sliver_id`. Also ensure that the sliver
    IDs are consistent with `sliverstatus` and between calls. Also clean
    up manifest formatting. (#484)
  - AM API v3 GCF AM must respect the `gcf_config` name of the AM authority (#487)
  - Add support for ABAC speaks for credentials to libraries,
    aggregates (#413)
  - Support named timezones when renewing, etc (#503)

 * acceptance tests
  - `get_ch_version` should return an `int` for `api`, not a `float` (#449)
 
 * omni-configure
  - Added Kentucky as a CH/SA authority (#453)
  - Add support for speaking the common Clearinghouse API (CH API) to
    the GENI Clearinghouse/Portal.  Use `--not-use-chapi` to get the old behavior. (#519)

 * readyToLogin.py
  - Add support for v2 GRAM (#444)
  - Fix error with called immediately after `createsliver` (#399)
  - Make work with `--useSliceAggregates` (#534)
  - Avoid errors when reservations include SFA AMs with no nodes. (#536)

 * Added new script `examples/addMemberToSliceAndSlivers` (#508)
  - Given a slice and a username, add the user to the slice and then
    add their Clearinghouse registered SSH keys to all existing slivers.

gcf 2.4.2:
 v2.4.2 contains changes to support running omni on Windows.
 * omni
  - On Windows, fix bug in construction of urls from
    `default_rspec_location` (#401)
 * readyToLogin.py
  - Better handle whitespaces between users' keys specified in the
    omni_config (#396)
 * omni-configure.py
  - Remove dependences on outside call to `ssh-keygen` (#400)
  - Set the default location of the `omni-bundle.zip` specified with the
    `-z` option on Windows XP (#402)
  - Fix bug that caused `.gcf` directory to not get created on Windows
    (#403)
 * acceptance tests
  - Use crossplatform `getpass` module instead of UNIX-only `pwd`
    modules in omni_unittest.py (#397)

gcf 2.4.1:
 * Modify readyToLogin.py to work with new login info in InstaGENI
   manifests (#389)

gcf 2.4:
 * omni
  - Add nicknames for RSpecs; includes ability to specify a default
  location. See the sample omni_config for details. (#265,#360,#361)
  - Make `allocate` accept rspecs loaded from a url (#287)
  - New command `nicknames` lists the known aggregate and rspec nicknames (#146)
  - Split aggregate nicknames into a separate file from `omni_config`. (#352)
    Omni periodically downloads a config file of standard aggregate
    nicknames so you don't have to define these, and can get such
    nicknames as soon as new aggregates are available.
  - New option `--speaksfor` to specify a user urn for the speaks for option. (#339) 
    See http://groups.geni.net/geni/wiki/GAPI_AM_API_DRAFT#ChangeSetP:SupportproxyclientsthatSpeakForanexperimenter
  - New option `--cred` to specify a file containing a credential to
  send to any call that takes a list of credentials. Supply this
  argument as many times as desired. (#46)
  - New option `--optionsfile` takes the name of a JSON format file
  listing additional named options to supply to calls that take
  options. (#327)
  Sample options file content:
{{{
{
 "option_name_1": "value",
 "option_name_2": {"complicated_dict" : 37},
 "option_name_3": 67
}
}}}
  - Log messages: include timestamp, make clearer (#296)
  - Renew to now or past raises an exception (#337)
  - Re-organize Omni help message for readability (#350)
  - When renewing a slice using a saved slice credential, save the new
  slice credential and avoid printing the old slice expiration (#314)
  - Clean up logs and error messages when an aggregate is unreachable. Clients are cached 
   for a given Omni invocation. `CreateSliver` now gets its aggregate similar to other methods. (#275,#311)
  - Add Utah DDC rack (#347)
  - Refactor chhandler credential saving methods into `handler_utils.py` (#309)
  - Explicitly import framework files to support packaging (#322)
  - Ignore unicode vs string in comparing AM URNs (#333)
  - Document omni command line options (#329)
  - Fix parsing of cache ages (#362)
  - Check for 0 sliver expirations in parsing `Provision` results (#364)
  - Allow scripts to use the omni `parse_args` with a supplied parser 
    (one that the script modified from the omni base). (#368)

 * gcf
  - Add timestamps to pgch logs (#297)
  - Make ch optionally multi-threaded, default True (#313,#359)
  - Credential verifier logs when a credential is unparseable but
    moves on to try others (#46)

 * stitcher
  - Add 2 new options to change sleep between sliverstatus calls at
    ION AMs and reservation attempts (#299)
  - Support EG AM Manifests where hop IDs are changed and only some
    hops are included, and vlanRangeAvailable is not trustworthy (#317)
  - Add new `--fixedEndpoint` option for use when link ends at a
    switch, so AMs are happy. (#336)
  - Add new `--noExoSM` option to try to force using local rack VMs
  - Save the slice credential to a file when we check it is valid, if
    it didn't already come from a file. (#309, #331)
  - Delete old getversion files (#307)
  - Retry DCN (ION) reservations at most 3 times locally, not 10 (#332)
  - Find missing AM URLs from `omni_config` nicknames or CH if possible (#319)
  - Stop adding expires attribute on request rspecs (#344)
  - Support SCS !GetVersion for testing (#295)
  - Pause longer before retrying ION circuits (#298, #299)
  - A Link with 2 identical AMs really has only 1 AM, so use Omni (#300)
  - Give up on fatal mapper errors from ProtoGENI based AMs (#301)
  - Sleep between runs after re-calling SCS, in case the sleep isn't
    needed. (#305)
  - Quiet down errors merging ExoGENI manifest RSpecs (#321)
  - Be a little more careful when merging hops in the combined manifest RSpec (#323)
  - Be sure to re-enable logging when an omni call raises an exception
    (#335)
  - Support multiple circuits when parsing sliverstatus at DCN AMs
    (#292)
  - PG AMs now report the failed path/tag - use that to ID the failed
    hop (#354)
  - Be sure to use distinct tags when 2 paths go across the same
    hop. Generally clean up code to pick a new VLAN tag locally (#353)
  - Fix up use of minidom Document (#358)
  - Bail out more completely if a transit aggregate has a fatal error (#365)
  - Be sure `--noExoSM` option is honored: load the AM nickname cache, 
    and make sure we do all the usual omni option post processing. (#367)
 
 * omni-configure.py
  - Add support for rspec nicknames and default rspec locations (#326)

 * readyToLogin
  - When _using_ the `--no-keys` option, don't check whether the user has
    any private ssh keys to use logging into nodes (#341)
  - When _not_ using the `--no-keys` option, print a helpful error message
    when you bail due to a lack of having any private SSH keys to use
    logging into nodes (#342)
  - Fix bug if call `readyToLogin` against multiple AMs where not all of
    them have resources allocated to the indicated slice (#330)
  - Fix bug when `readyToLogin.py` reports ready when some node has failed (#343)
  - Add support for ExoGENI multi-user slices to readyToLogin.py (#366)

 * remote-execute
  - Fixed bug handling multi-user slices (#349)

 * expirationofmyslices
  - Allow calling without a username (#370)

 * acceptance tests
  - Added test for `get_ch_version` (#316)
  - `test_getusercred_nagios()` downloads a user credential and
    validates its format for use with monitoring (#338)
  - Added `am_api_accept_scaling.py` which contains a scaling test (#324)
  - Don't try to renew a slice shorter (#363)

gcf 2.3.2:
 * omni
  - Make framework_pgch not require a project if slice URN is given (#293)
  - Stop common errors in framework_pgch.py from throwing a stacktrace (#306)
 * clear-passphrases.py
  - fix bug when omni_config is in certain directories (#304)

gcf 2.3.1:
 * Added a new script to do GENI VLAN stitching: stitcher.py
 See README-stitching.txt
 This script uses the GENI stitching service to expand a request RSpec
 to allow you reserve VLANs that cross between GENI aggregates. 
 `createsliver` or `allocate` commands with an RSpec that requires
 stitching will be processed by the stitcher code. All other calls
 will be passed directly to Omni.
 All calls are APIv2 (hard-coded) currently. The input request RSpec
 does ''not'' need a stitching extension, but should be a single RSpec
 for all resources in all aggregates that you want stitched together
 in the slice. To create a request that needs stitching, include at
 least 1 <link> elements with more than 1 different
 <component_manager> elements.
 (Ticket #250)
 * Update READMEs to match changes to gcf wiki (#272)
 * Update copyright notices

 * omni
  - Ticket #240: don't print ProtoGENI log URL in result summary on
    success
  - Ticket #242: Be robust to malformed geni_api_versions
  - Refactor file saving utilities out of amhandler and into handler_utils (ticket #248)
  - getversion not caching from PG because the log url looks like an
    error (ticket #249)
  - Busy results from XMLRPC calls missed: is_busy_result looking for
    geni_code in wrong spot (ticket #247)
  - Ensure RSpec test code can call rspeclint (ticket #246)
  - Ticket #245: Return slice URNs from listmyslices in all cases
  - Ticket #226: Look for python in environment in scripts in a more
    friendly way
  - Update sample omni_config (ticket #258)
  - Added `listslices` alias for `listmyslices`, and made username
    argument optional (defaults to your username). (ticket #256)
  - Log ProtoGENI log URL on clearinghouse errors (ticket #251)
  - Added new `get_ch_version` method for querying the the configured
  clearinghouse for its version, if supported. And add support to the
  GENI Clearinghouse interface. (ticket #270)
  - Various minor code cleanup changes
  - Add 3 more known InstaGENI racks to the `omni_config` nicknames
    (ticket #258)
  - Fix pgch handling of new `authority` field for GENI Portal
  accounts, for both slices and users (ticket #279)
  - Make the GENI Clearinghouse framework say 'GENI Clearinghouse', and
  not 'PG' (ticket #281)
  - Add `authority` field to `pgch` framework. Omni users with a 'GENI
  Clearinghouse' account should re download an Omni bundle from the
  Portal and re-run omni-configure, or manually add a line setting
  `authority = panther` (or `ch.geni.net` after June 5). (#268)

 * omni-configure.py
  - Handle local private key in omni-configure for portal accounts (#267)
  - Make `omni-configure.py` handle an `authority` field for framework `pgch` (#269)
  - Make omni-configure.py default to portal accounts ('-f portal') (#271)
  - Modify omni-configure not to use the same filenames for different CHs (#273)
  - Remove typos from omni-configure.py -h (#282)
  - If your SSH private key is not the same as your SSL private key, generate one for use with some tools (#283)
  - Modify the '-e' parameter to take a folder and not a file (#289)
  - Fix: omni-configure overwrites omni_config when told not to (#290)

 * clear-passphrases.py
  - Modified the script so that it works with the private key for the
    SSL cert if not part of the SSL cert file. (#280)
    Detailed modifications are:
      - replaced option -p with -k to specify a path for the private
        key that corresponds to the SSL cert
      - replaced option -k with -e to specify the path for the private
        SSH key
      - added option -c to specify an omni_config file.
      - by default the script works with an omni_config file where it
        parses the selected framework and users and finds the key for the SSL
        cert and of the private SSH keys that are available on the system and
        removes the passphrases
      - if no options are specified it tries to find a default
        omni_config the order is the same as in omni.py
      - you can either run the script with an omni_config file or with
        the -k or -e options. If both -c and -k or -e options are
        specified, -c takes precedence. If -k or -e are specified
        without the -c, then those keys are decrypted, but the default
        omni_config is not looked at.

 * readyToLogin.py
  - Make readyToLogin.py take a --no-keys option to support multiple members in a slice (#276)
  - Fix handling of no-keys option and calling from remote-execute script (#291)

 * acceptance tests
  - Increased the default time to sleep between AM API calls to 30
    seconds, which appears to work more consistently.
  - Suppress some verbose command output by sending results to files.
  - Use the getversion cache when not testing getversion (#236)
  - Update sample omni_config (ticket #258)

 * gcf
  - Restore missing gcf-ch options for specifying credential lifetimes.
  - gcf-pgch takes a new `--use-gpo-ch` option to force using the
    remote GPO Clearinghouse (ticket #255)
  - gcf-test supplies proper namespaces in request RSpecs (ticket #254)
  - pgch tests slice authority and project name for errors (ticket #243)
  - cred_util `CredentialVerifier` does not raise XMLRPC faults (ticket #120)
  - Fix handling of renew sliver error in pgch (ticket #277)

gcf 2.2.1:
 * omni:
  - omni-configure: Added support for automatic configuration of omni
    for portal credentials. (ticket #252)

gcf 2.2:
 * GENI-in-a-Box code is now included, though it is not runnable from
 this source distribution. To learn more, see
 http://groups.geni.net/geni/wiki/GENI-in-a-Box (ticket #215)
 * Updated SFA library files to tag 2.1-17

 * omni
  - If an aggregate does not speak the requested Ad RSpec version and
  the user is just using the default and the aggregate either speaks
  only 1 RSpec format or specified a default Ad format, then use that
  (ticket #212)
  - If all requested aggregates (or most) speak a different AM API
  version than requested, switch to that. Note that API version
  changes are for the entire Omni invocation, not per
  aggregate. Do not change in dev mode, or if the user explicitly
  specified this API version. (ticket #213)
  - Add new options to set log level: `--error`, `--warn`,
  `--info`. This allows scripts using Omni to suppress output. Note
  that at WARN and ERROR levels, command results (like the manifest
  RSpec) are not printed: use `-o`. If multiple log levels are
  specified, the more verbose log level is used. (tickets #209,#223)
  - If an aggregate does not speak the requested Ad RSpec version,
  print a more helpful message. (ticket #211)
  - Added support for the ProtoGENI / InstaGENI 'createimage' method to
  snapshot your disk. This is only minimally supported by
  ProtoGENI. On success, you should see the URN and URL for the new
  image, and later an email will tell you the image is ready, and the image file will be
  available under `/proj/<project>/images/<imagename>.ndz` on the node
  which was associated with the sliver urn used with the Omni command. See
  http://www.protogeni.net/trac/protogeni/wiki/ImageHowTo (ticket #186)
  - Ticket #232: Implemented ProtoGENI/InstaGENI !DeleteImage: supply
  the URN of your image to delete it.
  - Support ProtoGENI/InstaGENI `ListImages`: list the disk images
  created by the given user, or by you if no name given. (ticket #239)
  - Ticket #237: Print PG error log URL if available
  - Ticket #238: Print the PG log URL in INFO logs on success, in
  result summary on error
  - Support GCF CH `list_my_slices` in the Omni `listmyslices` command (ticket #214)
  - Add a 'gib' framework for geni-in-a-box to talk to the pgch clearinghouse
  - Provision now supplies the `geni_rspec_version` option, to specify
  the manifest format to use. (ticket #216)
  - All keys in omni_config are stored lowercase - including aggregate
  nicknames. This means nicknames are case insensitive, and must be
  looked up that way. (ticket # 218)
  - Print error if certificate or key file is empty (ticket #210)
  - Change ProtoGENI Utah, GPO and Kentucky URLs to use port 12369 (ticket #227)
  - Avoid exception if no live AMs are found (ticket #221)
  - readyToLogin.py saves loginInfo and ssh config in files if '-o' option is
  present. It will also use the '--prefix' option for adding a prefix in the
  default filenames (logininfo.txt, sshconfig.txt). By default it will overwrite
  files; use --do-not-overwrite options to avoid this. (ticket #172)
  - readyToLogin.py will set the loglevel of omni to WARN to avoid noisy output,
  use --debug, --info to override (ticket #209)
  - readyToLogin.py handles correctly changes in AM URLs (ticket #206)
  - new remote-execute.py script that enables the user to execute commands in
  his/her GENI hosts from any host using ssh (ticket #224)

 * gcf
  - Add new `list_my_slices` CH command for use from the Omni `listmyslices` command (ticket #214)
  - Add pgch: gcf CH with a ProtoGENI style CH API
  - gcf-am v3: Require `geni_rspec_version` option to `Provision` (ticket #216)
  - Print error if certificate or key file is empty (ticket #210)
  - APIv3 gcf-am Describe now correctly returns an empty manifest for
    an unknown slice (ticket #222)

 * AM API Acceptance Tests
  - Allow an empty return or error from some v3 methods, when slice has
    nothing locally (ticket #220)
  - Added tests for use in monitoring with nagios.  Test `CreateSliver` and `SliverStatus` in
  v2 and v3 (ticket #225).
  - Change ProtoGENI Utah, GPO and Kentucky URLs to use port 12369 (ticket #227)
  - Truncate milliseconds off times used in acceptance tests.  When checking if two times 
  are equal, only check that they are within a second of each other.  (ticket #231)
  - Allow v1 aggregates to return None in cases of failure.  This fixes a bug introduced 
  in gcf-2.0. (ticket #229)
  - Check for type for optional `geni_allocate` and `geni_single_allocation` fields in return 
  from AM API v3 version of `GetVersion`. (#233)
  - Improve checking of sliver expiration time (#234)

gcf 2.1:
 * omni
  - Fix ugly error on createslice error (ticket #192)
  - Fix ugly error on unexpected result format in sample myscript
  (ticket #193)
  - `CreateSliver` now accepts an RSpec in JSON format
  - Clean some output messages (`ListResources`, whether omni lists
  the getversion cache name option, a WARN on v2 getversion at a v1
  AM, etc)
  - Clean generated filenames from a protogeni AM (ticket #196)
  - Report PG error log URN on errors, if available (ticket #198)
  - On API version mismatch, report that error in the run summary
  (ticket #200)
  - Remove extra \n's in rspec output (ticket #202)
  - When we switch AM URLs, be sure result is hashed by correct URL
  (ticket #205)
  - Put overall sliver status in the result summary (ticket #197)
  - RSpec can now be a URL instead of a filename (ticket #189)
  - Strip more useless info from generated filenames
  - Bug fixes, log message cleanup

 * gcf
  - gen-certs: Include UUID in generated certs, per AM API v3
  - gen-certs: Check that user URN is valid per AM API v3
  - gcf-ch: Check that slice URN is valid per AM API v3
  - am2: Wrap all API calls in a try/catch and return proper API error results
  - ch_interface: Sign outgoing messages
  - Do not check /etc for gcf_config

 * AM API acceptance tests
  - Add `--skip-renew` option to skip all `Renew` and `RenewSliver` tests
  - acceptance.log now includes a message of what test is starting, to
  help indicate which logs correspond to any test failures. (ticket #204)

gcf 2.0:
 This is a major release. It includes:
 - AM API version 2 is the default. Include the -V option to use AM
 API v1 aggregates (like FOAM)
 - AM API version 3 is supported by all tools
 - Omnispecs are no longer supported in Omni.
 - Added a `--outputfile` option letting you specify the name of the
 file Omni saves results in.
 - Multiple aggregates can be specified on the Omni commandline using
 multiple `-a` options.
 - Lots of code cleanup and bug fixes.

== Changes in gcf 2.0 ==

 * omni
  - Make AM API default to version 2, and RSpecs default to GENI 3 (in
  Omni, gcf-am, gcf-test). To talk to an AM API v1 aggregate
  (e.g. FOAM), you must supply an option: `-V1`. (ticket #173)
  AM API v2+ aggregates require that you specify the RSpec format you
  want, when using `ListResources`. Omni now specifies the RSpec format
  GENI 3 by default: you can always request a different format, if the
  AM supports it. (ticket #90, #141)

  - Omni no longer supports the deprecated 'omnispecs' RSpec
    format. Use GENI v3 format RSpecs. (ticket #97)
  - Added AM API v3 support (ticket #174)
   - Each API method is a separate Omni command
   - `performoperationalaction` has a synonym: `poa`
   - Omni does not parse Ad RSpecs to reason about valid operational
     states or actions
   - `CreateSliver` and other AM API v1&2 methods work only for AMs
     speaking those versions of the AM API.
   - Added new options `--best-effort`, `--sliver-urn` (`-u`) and `--end-time` to
     support passing `geni_best_effort`, individual sliver URNs to act on,
     and `geni_end_time` respectively
   - Support credential structs: Framework classes are responsible for
     tagging credentials with the appropriate type and version. Internally,
     Omni deals with credentials as opaque blobs, except for a few helper
     routines. Credential saving and loading method write to `.xml` or `.json`
     files appropriately, and infer and correct loaded credentials as
     needed.
   - v3 method returns, which are all structs, are saved to `.json`
     files. This means manifest RSpecs (as returned by Describe, Allocate,
     Provision) are one entry in a larger `.json` file. Note that Allocate
     can take a `.json` file as input, and it will extract the request RSpec
     if needed.
   - AM API v3+ Omni methods all return the full code/value/output struct for use
     by scripts (ticket #183)
   - Omni checks v3 return structs, looking for missing slivers, slivers
     reporting errors, and checking sliver expirations.
  - Omni tries to correct the API version you specify: If you ask for V2
    but are talking to a V3 AM, it tries to reconnect to a V2 URL if the
    AM advertises it. (ticket #91, #141, #164)
  - Added a new option `--outputfile`: With `-o`, this means save command results to
    the given file name. Without this, Omni builds its own filename (as
    before). Include `%a` in specified filename and Omni interpolates an AM
    name. `%s` means insert the slice name. (ticket #175)
  - `getslicecred` and `getusercred` are more consistent in how the result
    is printed, logged, or saved. These methods now honor `-o`, `-p`, and `--stdout` options.
    `getusercred` honors the `--usercredfile` option. (ticket #176)
  - `getversion` output is saved to a `.json` file (ticket #150)
  - Allow specifying multiple aggregates on the command line (multiple
    `-a` options). All methods except `CreateSliver` support
    this. (ticket #177)
  - Added new option `--devmode` (default `False`). When true, only warn on bad
    inputs, but try to pass the bad inputs along anyhow. (ticket #78)
  - Added a new !GetVersion Cache: the results of `GetVersion` are
    cached locally as serialed JSON. `ListResources` and other calls that
    require information from `GetVersion` may use this cache instead.
    `GetVersion` does not use the cache by default. Cache entries
    have a max age, after which we always re-query the AM. (ticket #81)
  - libstitch example: Allow caller to specify the per-AM fake manifest RSpec to
    use when in fake mode, by using a comment in the request
    RSpec. (ticket #178)
  - omni-configure: Added new `-e` option to specify the experimenter's private
    SSH key. The public SSH key will be named `private_key.pub`
    (ticket #143, #144, #145)
  - readyToLogin: handle multiple users, multiple keys, the different
    ways different AMs return results, etc (ticket #117, #161, #171)
  - Omni code has been refactored for maintainability and
    extensability. Calls to clearinghouses are in chhandler.py, and to AM
    API functions are in amhandler.py. In the process, input checking and
    output formatting has been further standardized. (tickets #163, #168)
  - Log and return any AM API error return code and message (ticket #149).
  - Added a new option --raise-error-on-v2-amapi-error: When true, and
    using AM API v2, on an error return code, raise an AMAPIError that 
    includes the full return struct: this allows scripts to reason about
    the return code. This replaces a special case check for code 7
    (Refused) (ticket #183)
  - `getversion` returns the full struct (code/value/output) to
    scripts (ticket #183)
  - A couple utility methods can take no slice name, just a slice
    credential filename, and read the slice name/urn from the
    credential. See print_slice_expiration
  - When reading a credential from a file, make sure it matches the
    expected slice.
  - Log clearly when a supplied credential filename was not used,
    and instead omni contacted the clearinghouse (ticket #165)
  - Use json.dumps to produce pretty dict output; this allows
    re-parsing that output in Omni, e.g. in Allocate to get the request
    RSpec
  - Replace old `doNonNative` scripting example (`myscript.py`) with a
    script that reads the AM URL and slice name from a comment in the
    supplied RSpec file. (tickets #97, #184)
  - Remove obsolete setup-*.py files. Follow INSTALL.txt to install
    GCF an Omni. (ticket #169)
  - Added a utility function that checks for valid URNs by type,
    including checking AM API v3 rules restricting characters in
    URNs. (ticket #113)
  - Updated to latest SFA (from around July 20th, 2012)
  - Clean up `createsliver` output (ticket #139)
  - `Listresources` notes if supplied slice credential is expired (ticket #162)

 * gcf
  - Make AM API default to version 2, and RSpecs default to GENI 3 (in
    Omni, gcf-am, gcf-test). To talk to an AM API v1 aggregate
    (e.g. FOAM), you must supply an option: `-V1`. (ticket #173)
  - Add AM API v3 support, including tracking resource states and
    multiple slivers. Resource actions are geni_start, geni_stop,
    geni_restart. (ticket #156)
  - gcf-test: Add support for API v2 and v3, making v2 the default
    (matching other scripts) (ticket #179)
  - Updated to latest SFA (from around July 20th, 2012)
  - Added a GCF AM that proxies connections to other AMs, using a certificate
    retrieved from the new GENI Clearinghouse, plus a test script.
    Added gcf-gch: An XMLRPC interface to the new GENI Clearinghouse
  - Test for non existent certificate and key files, to provide nice
    error feedback (ticket #180)
  - `getversion` in v2 must return `geni_api_version` (ticket #151)

 * AM API acceptance tests
  - Added AM API v3 support. Not all bad-input style tests are
  implemented yet. (ticket #181)
  - Fuller testing of the `geni_available` flag (ticket #153)
  - Check for `geni_api_version` in `getversion` (ticket #152)
  - Allow optional fields to be None (ticket #185)

gcf 1.6.2:
 * omni
   - Added omni-configure.py script to autogenerate the omni_config (#127)
   - Log malformed sliverstatus (#128)
   - Better missing file error messages in delegateSliceCred (#129)
   - Update to SFA codebase as of 4/13/12
   - Bug fix: Handle AM down when !ListResources calls !GetVersion and
   gets a null (#131)
   - Implement list my slices for SFA/PlanetLab (#137)
   - Allow listing public keys installed by / known by the CH (#136)
 
 * gcf
   - Allow putting a UUID in experimenter certs (#130)

 * AM API acceptance tests
   - Added --pure-v1 which when used with -V 1 will only test for things required by AM API v1 (and not test for things required by Change Set A).  (#126)
   - Fix a bug in the RSpec schema urls and create a standard place to store these constants (#134)
   - When comparing request and manifest RSpecs, compare `component_id` for bound RSpecs only and compare `client_id` for both bound and unbound RSpecs. (#135)

gcf 1.6.1:
 * AM API v1 acceptance tests
   - request3.xml.sample should point to a node that really exists. (#124)

gcf 1.6:
 * omni
   - Log malformed XML exception correctly (#95)
   - Make getversion AM API v2 implementation be consistent with other commands (#109)
   - Added `--arbitrary-option` to allow testing whether an AM supports an arbitrary option (#111) 
   - Moved omni_config template to be omni_config.sample and changed instructions to match (#83)
   - Update libstitch to work with V2 AMs in some cases (#119)
   - Updated `get_aggregates()` call due to changes in SFA (#94)
   - Fix bug in `_get_advertised_rspec()` (#114)
   - Add `--logoutput` option and corresponding ability to use %(logfilename)s in log configuration file (#118)
   - readyToLogin.py example script now includes port info if ssh command is not port 22 (#115)
   - Fixed bug where if users attribute is empty in omni_config, then omni exited without a useful error (#116)
   - Improve busy response handling to AM's running AM API v2 and SAs (#123)
 * gcf
   - Moved gcf_config template to be gcf_config.sample and changed instructions to match (#83)
   - Cleaned up TROUBLESHOOTING.txt (#110)
 * AM API v1 acceptance tests
   - Changed sample RSpec files to end in `.xml.sample` instead of `.xml` (#83)
   - Added a test that delegated credentials are used properly (#99)
   - Added a test that exercises `CreateSliver` on an existing sliver (#87)
   - Added AM API v2 support for acceptance tests (#100)
   - Fix bug in schemas passed into rspeclint (#112)
   - Added `--monitoring` flag to acceptance tests to support their use in cross framework testing (#103)

gcf 1.5.2:
 * omni    
   - Validate the API version argument (#92)

 * AM API v1 acceptance tests
   - Exercise !ListResourcs with an untrusted authority (#93)
   - Exercise the !CreateSliver workflow with multiple simultaneous slivers (#84)
   - Exercise `Shutdown` (#86)
   - Exercise !ListResources with broken credentials (#85)
   - Verify that !ListResources(slice) returns a slice manifest RSpec (#88)
   - Verify that !CreateSliver returns a slice manifest RSpec (#88)

gcf 1.5.1:
 * omni
  * Incorporated latest SFA library changes (tag sfa-2.0-4)
  * Complete support of AM API v2 (ticket #69)
    - Default is AM API v1
    - Use `-V 2` or `--api-version 2` to cause omni to use AM APIv2 to speak to aggregates
   * Added `--available` to have listresources filter calls to only include available nodes (ticket #74)
   * Added `--no-compress` to allow the user to specify that AM API call returns should not be compressed (ticket #73)
 * gcf
  * Incorporated latest SFA library changes (tag sfa-2.0-4)
  * Complete support of AM API v2 in reference AM (ticket #68)  
 * AM API v1 acceptance tests
  * Test common options on `ListResources` (ticket #75)
  * Test `CreateSliver` workflow on deleted/non-existant slivers (ticket #79)
  * Test `CreateSliver` with a variety of bad request RSpecs (ticket #76)
  * Test `CreateSliver` succeeds under normal conditions (ticket #72)
  * Test `RenewSliver` under normal conditions (#77)
  * Added `--sleep-time` to adjust the time between AM API calls at the AM

gcf 1.5:
 * omni
  * Removed AM specific URL validation checks; they were confusing. (ticket #66)
  * Incorporated SFA library fixes
  * Updated `readyToLogin` script to filter out nodes that aren't ready
    and handle if !PlanetLab has no resources
  * Improved check of manifest RSpec returned by `CreateSliver`
  * Added `--usercredfile` to allow the user to provide their user credential as a file
  * Implemented preliminary (but incomplete) support of AM API v2
 * gcf
  * Added a reference AM which supports (most of) AM API v2
 * AM API v1 acceptance tests
  * Initial cut at acceptance tests

gcf 1.4:
 * omni
  * Omni logging is configurable with a `-l` option, or from a script by calling applyLogConfig(). (ticket #61)
  * Omni aborts if it detects your slice has expired (ticket #51)
  * Omni config can define aggregate nicknames, to use instead of a URL in the -a argument. (ticket #62)
  * Solved a thread safety bug in omni - copy options list. (ticket #63)
  * SFA logger handles log file conflicts (ticket #48)
  * Handle expired user certs nicely in Omni (ticket #52)
  * Write output filename when `ListResources` or `GetVersion` saves results to a file. (ticket #53)
  * Warn on common AM URL typos. (ticket #54)
  * Pause 10 seconds and retry (max 3x) if server says it is busy, as ProtoGENI often does. (ticket #55)
  * Added stitching script in examples. Uses Omni library to do VLAN stitching between aggregates using tree mode (no negotiation). The script functionality is provided as a library itself, and provides a complex Omni scripting example.
  * SFA library updates (eg slices declare an XML namespace)
  * SFA library bug fixes
  * Fixed a minor bug in examples/readyToLogin for certain ProtoGENI aggregates
  * Incorporated GEC 11 ABAC demonstration code
  * Added a "--no-tz" option for renewing slivers at older SFA-based aggregates. (ticket #65)
 * gcf
  * Fix `RenewSlice` in `gcf-ch.py` to honor the requested time. (ticket #60)
  * GCF tools option change: gen-certs, gcf-am, etc now use `-c` to specify the config file, not -f. -g lets you specify the cert file. (ticket #56)
  * Certificate lifetime is configurable in gen-certs (ticket #57)
  * GCF slices are delegatable by default (library supports specifying this now) (ticket #58)
  * Changed certificate generation (src/gen-certs.py) to properly mark the ch certificate as a CA


gcf 1.3.2:
        - Fixed user-is-a-slice bug (ticket #49)

gcf 1.3.1:
	- SFA library fixes with delegated slice credentials
	- Ensure the root error is reported to the user when there are
	problems.
	- Once the user has failed to enter their passphrase twice,
	exit - don't bury it in later errors. (ticket #43)
	- Clean up timezone handling (ticket #47)
        - examples directory contains simple scripting examples
        - New delegateSliceCred script allowing off-line delegation of
	slice credentials.
        Run src/delegateSliceCred.py -h for usage. (ticket #44)
	- More error message cleanup

gcf 1.3 May, 2011:
	GCF:
	- Fix certificates to be marked V3, instead of erroneously V1
	(ticket #36)
	- Support additional options in the AM's `GetVersion`
	- Bug fixes

	Omni:
	- Omnispecs are deprecated and native RSpecs are now the default.
	- New --omnispec option (default false). Users should use
	native RSpecs.
	- New -o and -p options controlling saving results in files
	(see getversion, sliverstatus, listResources, getslicecred,
	createsliver) (tickets #39,42)
	- --tostdout says when not saving results to files per -o
	option, write results to STDOUT instead of log stream (for redirecting)
	- New -t option to specify that Ad RSpecs must be of a
	particular type and version. An AM that cannot provide that
	format will not be included in results. (ticket #40)
	- Ticket #41: --slicecredfile specifies the name of a file to
	save/load a slice credential from.
{{{
	    createslice -o --slicecredfile <filename>
}}}
 	saves the new slice credential there. AM calls can use the
	credential. For example: 
{{{
            omni.py  --slicecredfile mysavedcred.xml \
	               createsliver myslicename myRSpec.xml
}}}
	- New listmyslices command added to see what your framework's
	registry has for you (ticket #38)
	- Refactoring to allow re-use of omni functions as library
	calls (ticket #37)
	- User feedback is clearer
	- Clean up error handling (tickets #25,#28,#29)
	- Check slice expiration, print for user (ticket #35)
	- New print_slice_expiration omni function
	- New api_test script to test AM API compliance and server availability
	- Add options for temporary Orca compatibility
	- Better config file searching
	- From Ezra Kissel: Enable allocating specific PG nodes from
	omnispecs (ticket #33)
	- Bug fixes

gcf 1.0 September, 2010:
       - RPM library install available, with dependencies
       - Refactored URN, certificate and credential utilities into
       library functions
       - Renamed gam -> gcf-am, gch, client
       - Refactored omni support files to parallel directory
       - gcf_config configures URNs, file locations, etc.
       - geni_aggregates incorporated into gcf_config
       - omni_config is now a Python properties file format
       - omni listresources takes optional Aggregate Manager URLs to contact
       - Drop CH.Resolve - not used
       - Dropped the CA certificate. The CH certificate is the
       self-signed root. Install only the CH certificate at all
       federated AMs to allow peering.
       - Dropped the -u user certificate argument to the GENI
       Clearinghouse - not needed.
       - Refactored common functionality for manipulating Credentials
       into new src/geni/credential.py
       - Shutdown now requires the shutdown privilege (which proper
       user credentials will have)
       - Omni supports !OpenFlow Aggregate Managers and RSpecs (not yet
       the !OpenFlow Clearinghouse)
       - More error checking of arguments and more helpful error messages 
       - omni_config now accepts # started comments
       - Comments and documentation

July, 2010:
	Much more documentation, error checking, logging, and clearer error
	reporting.

	Support credentials from multiple control frameworks / CAs
	without restarting.

	gcf-am and gcf-ch want the -r argument to be a directory of all
	trusted (federated) CA and Clearinghouse certificates, to be
	able to validate and accept certificates from multiple control
	frameworks at once.

	gcf-ch takes a user certificate argument for test purposes
